{"version":3,"sources":["config.js","components/Output.js","components/Terminal.js","components/Device.js","components/Background.js","App.js","serviceWorker.js","index.js"],"names":["links","Output","props","className","line","trim","toLowerCase","href","target","rel","createOutput","Terminal","state","lines","input","handleSubmit","bind","handleChange","event","this","setState","prevState","concat","preventDefault","value","blur","focus","outputs","map","index","key","onSubmit","ref","elem","type","onChange","onBlur","autoFocus","Component","Device","Background","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6d9cc711.chunk.js","sourcesContent":["const links = {\n  resume:\n    \"https://docs.google.com/document/d/1TEsW382Kkjgz4FqoFjjwV-o1kY27UScMC7JrAfnsfoo/edit?usp=sharing\",\n  linkedin: \"https://linkedin.com/in/luis-arredondo-262067115/\",\n  github: \"https://github.com/arre1908/arre1908.github.io/\",\n  email: \"arredoluis@gmail.com\",\n  swapi: \"https://luisarredondo.com/vue-swapi\",\n};\n\nexport { links };\n","import React from \"react\";\nimport { links } from \"../config\";\nimport \"../css/Output.scss\";\n\nfunction createOutput(line) {\n  switch (line.trim().toLowerCase()) {\n    case \"help\":\n      return (\n        <div>\n          <div className=\"line\">\n            <span className=\"text-secondary\">me</span> - Show all info.\n            <br />\n            <span className=\"text-secondary\">swapi</span> - Show link to Star\n            Wars API web application.\n          </div>\n          <div className=\"line\">\n            <span className=\"text-secondary\">resume</span> - Show link to\n            resume.\n            <br />\n            <span className=\"text-secondary\">linkedin</span> - Show link to\n            LinkedIn profile.\n            <br />\n            <span className=\"text-secondary\">github</span> - Show link to Github\n            repo.\n            <br />\n            <span className=\"text-secondary\">email</span> - Show email address.\n          </div>\n          <div className=\"line\">\n            <span className=\"text-secondary\">clear</span> - Clear the console\n            output.\n            <br />\n            <span className=\"text-secondary\">help</span> - Show list of\n            commands.\n          </div>\n        </div>\n      );\n    case \"resume\":\n      return (\n        <div className=\"line\">\n          <a href={links.resume} target=\"_blank\" rel=\"noopener noreferrer\">\n            Google Drive\n          </a>\n        </div>\n      );\n    case \"linkedin\":\n      return (\n        <div className=\"line\">\n          <a href={links.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            LinkedIn\n          </a>\n        </div>\n      );\n    case \"github\":\n      return (\n        <div className=\"line\">\n          <a href={links.github} target=\"_blank\" rel=\"noopener noreferrer\">\n            Github\n          </a>\n        </div>\n      );\n    case \"email\":\n      return (\n        <div className=\"line\">\n          <a\n            href={`mailto:${links.email}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {links.email}\n          </a>\n        </div>\n      );\n    case \"me\":\n      return (\n        <div className=\"line me\">\n          <h1>Luis Arredondo</h1>\n          <a href={links.resume} target=\"_blank\" rel=\"noopener noreferrer\">\n            Resume\n          </a>\n          {\" | \"}\n          <a href={links.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            LinkedIn\n          </a>\n          {\" | \"}\n          <a href={links.github} target=\"_blank\" rel=\"noopener noreferrer\">\n            Github\n          </a>\n          {\" | \"}\n          <a\n            href={`mailto:${links.email}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Email\n          </a>\n        </div>\n      );\n    case \"swapi\":\n      return (\n        <div className=\"line\">\n          <a href={links.swapi} target=\"_blank\" rel=\"noopener noreferrer\">\n            Vue SWAPI\n          </a>\n        </div>\n      );\n    case \"\":\n      return \"\";\n    default:\n      return (\n        <div className=\"line\">\n          Unknown command: <span className=\"text-secondary\">{line}</span>\n        </div>\n      );\n  }\n}\n\nfunction Output(props) {\n  return (\n    <div>\n      <div className=\"line\">\n        <span className=\"text-accent\">\n          <span className=\"mobile-hidden\">me@luisarredondo.com:</span>\n          ~$&nbsp;\n        </span>\n        <span className=\"text-secondary\">{props.line}</span>\n      </div>\n      {createOutput(props.line)}\n    </div>\n  );\n}\n\nexport default Output;\n","import React, { Component } from \"react\";\nimport Output from \"./Output\";\nimport \"../css/Terminal.scss\";\n\nclass Terminal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lines: [],\n      input: \"\",\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    this.setState((prevState) => {\n      return {\n        lines:\n          prevState.input.toLowerCase() === \"clear\"\n            ? []\n            : prevState.lines.concat(prevState.input),\n        input: \"\",\n      };\n    });\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({ input: event.target.value });\n  }\n\n  componentDidUpdate() {\n    // Refocus input and scroll to bottom\n    this.input.blur();\n    this.input.focus();\n  }\n\n  render() {\n    const outputs = this.state.lines.map((line, index) => {\n      return <Output key={index} line={line} />;\n    });\n\n    return (\n      <div className=\"terminal\">\n        <div className=\"line\">\n          Hello, welcome to my website! This terminal app was built in React.\n        </div>\n        <div className=\"line\">\n          Type <span className=\"text-secondary\">help</span> and press Enter to\n          get a list of commands.\n        </div>\n\n        {outputs}\n\n        <div>\n          <div className=\"input-info text-accent\">\n            <span className=\"mobile-hidden\">me@luisarredondo.com:</span>\n            ~$&nbsp;\n          </div>\n          <div className=\"input-container\">\n            <form onSubmit={this.handleSubmit}>\n              <input\n                ref={(elem) => (this.input = elem)}\n                type=\"text\"\n                value={this.state.input}\n                onChange={this.handleChange}\n                onBlur={(event) => event.target.focus()}\n                autoFocus\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Terminal;\n","import React from \"react\";\nimport Terminal from \"./Terminal\";\nimport \"../css/Device.scss\";\n\nfunction Device() {\n  return (\n    <div className=\"container\">\n      <div className=\"device\">\n        <div className=\"screen\">\n          <Terminal />\n        </div>\n      </div>\n      <div className=\"keyboard\">\n        <div className=\"keyboard-grip\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Device;\n","import React from \"react\";\nimport \"../css/Background.scss\";\n\nfunction Background() {\n  return (\n    <div className=\"bg\">\n      <h1 className=\"title\">Luis Arredondo</h1>\n      <div className=\"shape\" />\n    </div>\n  );\n}\n\nexport default Background;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Device from \"./components/Device\";\nimport Background from \"./components/Background\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Device />\n      <Background />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}