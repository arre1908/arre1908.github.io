{"version":3,"sources":["components/Suggestion.js","config.js","components/Output.js","components/Terminal.js","components/Device.js","components/Background.js","App.js","serviceWorker.js","index.js"],"names":["Suggestion","text","onClick","className","links","descriptions","help","me","swapi","resume","linkedin","github","email","clear","commands","Object","keys","Output","line","handleSubmit","href","target","rel","createOutput","Terminal","state","lines","input","suggestions","bind","handleChange","refocus","event","textContent","this","setState","length","prevState","concat","preventDefault","value","trim","toLowerCase","filter","command","includes","suggestionsElem","scrollIntoView","inputElem","focus","outputs","map","index","key","onSubmit","ref","elem","type","onChange","autoFocus","Component","Device","Background","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3888557f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/Suggestion.scss\";\n\nfunction Suggestion({ text, onClick }) {\n  return (\n    <button className=\"suggestion\" onClick={onClick}>\n      {text}\n    </button>\n  );\n}\n\nexport default Suggestion;\n","const links = {\n  resume:\n    \"https://docs.google.com/document/d/1TEsW382Kkjgz4FqoFjjwV-o1kY27UScMC7JrAfnsfoo/edit?usp=sharing\",\n  linkedin: \"https://linkedin.com/in/luis-arredondo-262067115/\",\n  github: \"https://github.com/arre1908\",\n  email: \"arredoluis@gmail.com\",\n  swapi: \"https://luisarredondo.com/vue-swapi\",\n};\n\nconst descriptions = {\n  help: \"Show list of commands\",\n  me: \"Show all contact info\",\n  swapi: \"Show link to Star Wars API web application\",\n  resume: \"Show link to resume\",\n  linkedin: \"Show link to LinkedIn profile\",\n  github: \"Show link to Github profile\",\n  email: \"Show email address\",\n  clear: \"Clear the console output\",\n};\n\nconst commands = Object.keys(descriptions);\n\nexport { links, descriptions, commands };\n","import React from \"react\";\nimport Suggestion from \"./Suggestion\";\nimport { links, descriptions } from \"../config\";\nimport \"../css/Output.scss\";\n\nfunction createOutput(line, handleSubmit) {\n  switch (line) {\n    case \"help\":\n      return (\n        <div>\n          <div className=\"line\">\n            <Suggestion text=\"me\" onClick={handleSubmit} /> - {descriptions.me}\n            <br />\n            <Suggestion text=\"swapi\" onClick={handleSubmit} /> -\n            {descriptions.swapi}\n          </div>\n          <div className=\"line\">\n            <Suggestion text=\"resume\" onClick={handleSubmit} /> -\n            {descriptions.resume}\n            <br />\n            <Suggestion text=\"linkedin\" onClick={handleSubmit} /> -\n            {descriptions.linkedin}\n            <br />\n            <Suggestion text=\"github\" onClick={handleSubmit} /> -\n            {descriptions.github}\n            <br />\n            <Suggestion text=\"email\" onClick={handleSubmit} /> -\n            {descriptions.email}\n          </div>\n          <div className=\"line\">\n            <Suggestion text=\"clear\" onClick={handleSubmit} /> -\n            {descriptions.clear}\n            <br />\n            <Suggestion text=\"help\" onClick={handleSubmit} /> -\n            {descriptions.help}\n          </div>\n        </div>\n      );\n    case \"resume\":\n      return (\n        <div className=\"line\">\n          <a href={links.resume} target=\"_blank\" rel=\"noopener noreferrer\">\n            Resume\n          </a>{\" \"}\n          (link)\n        </div>\n      );\n    case \"linkedin\":\n      return (\n        <div className=\"line\">\n          <a href={links.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            LinkedIn\n          </a>{\" \"}\n          (link)\n        </div>\n      );\n    case \"github\":\n      return (\n        <div className=\"line\">\n          <a href={links.github} target=\"_blank\" rel=\"noopener noreferrer\">\n            Github\n          </a>{\" \"}\n          (link)\n        </div>\n      );\n    case \"email\":\n      return (\n        <div className=\"line\">\n          <a\n            href={`mailto:${links.email}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {links.email}\n          </a>{\" \"}\n          (link)\n        </div>\n      );\n    case \"me\":\n      return (\n        <div className=\"line me\">\n          <h1>Luis Arredondo</h1>\n          <a href={links.resume} target=\"_blank\" rel=\"noopener noreferrer\">\n            Resume\n          </a>\n          {\" | \"}\n          <a href={links.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            LinkedIn\n          </a>\n          {\" | \"}\n          <a href={links.github} target=\"_blank\" rel=\"noopener noreferrer\">\n            Github\n          </a>\n          {\" | \"}\n          <a\n            href={`mailto:${links.email}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {links.email}\n          </a>\n        </div>\n      );\n    case \"swapi\":\n      return (\n        <div className=\"line\">\n          <a href={links.swapi} target=\"_blank\" rel=\"noopener noreferrer\">\n            Vue SWAPI\n          </a>{\" \"}\n          (link)\n        </div>\n      );\n    case \"\":\n      return \"\";\n    default:\n      return (\n        <div className=\"line\">\n          Unknown command: <span className=\"text-secondary\">{line}</span>\n        </div>\n      );\n  }\n}\n\nfunction Output({ line, handleSubmit }) {\n  return (\n    <div>\n      <div className=\"line\">\n        <span className=\"text-accent\">\n          <span className=\"mobile-hidden\">me@luisarredondo.com:</span>\n          ~$&nbsp;\n        </span>\n        <span className=\"text-secondary\">{line}</span>\n      </div>\n      {createOutput(line, handleSubmit)}\n    </div>\n  );\n}\n\nexport default Output;\n","import React, { Component } from \"react\";\nimport Output from \"./Output\";\nimport Suggestion from \"./Suggestion\";\nimport \"../css/Terminal.scss\";\nimport { commands } from \"../config\";\n\nclass Terminal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lines: [],\n      input: \"\",\n      suggestions: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.refocus = this.refocus.bind(this);\n  }\n\n  handleSubmit(event) {\n    // Suggestion was clicked\n    if (event.target.textContent) {\n      this.setState({ input: event.target.textContent });\n    }\n    // Autocomplete to first suggestion\n    else if (this.state.suggestions.length) {\n      this.setState((prevState) => ({ input: prevState.suggestions[0] }));\n    }\n\n    // Append input to lines and reset\n    this.setState((prevState) => {\n      return {\n        lines:\n          prevState.input === \"clear\"\n            ? []\n            : prevState.lines.concat(prevState.input),\n        input: \"\",\n        suggestions: [],\n      };\n    });\n\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    // Update input\n    let input = event.target.value.trim().toLowerCase();\n    this.setState({ input: input });\n\n    // Update list of suggestions\n    if (input.length) {\n      let suggestions = commands.filter((command) => {\n        return command.includes(input);\n      });\n      this.setState({ suggestions: suggestions });\n    } else {\n      this.setState({ suggestions: [] });\n    }\n  }\n\n  refocus() {\n    // Scroll to bottom and focus input\n    this.suggestionsElem.scrollIntoView();\n    this.inputElem.focus();\n  }\n\n  componentDidUpdate() {\n    this.refocus();\n  }\n\n  render() {\n    const outputs = this.state.lines.map((line, index) => {\n      return (\n        <Output key={index} line={line} handleSubmit={this.handleSubmit} />\n      );\n    });\n\n    const suggestions = this.state.suggestions.map((command, index) => {\n      return (\n        <Suggestion key={index} text={command} onClick={this.handleSubmit} />\n      );\n    });\n\n    return (\n      <div className=\"terminal\" onClick={this.refocus}>\n        <div className=\"line\">\n          Hello, welcome to my website! This terminal app was built in React.\n        </div>\n        <div className=\"line help\">\n          Type (or click) <Suggestion text=\"help\" onClick={this.handleSubmit} />{\" \"}\n          and press Enter to get a list of commands.\n        </div>\n\n        {outputs}\n\n        <div className=\"line\">\n          <div className=\"input-info text-accent\">\n            <span className=\"mobile-hidden\">me@luisarredondo.com:</span>\n            ~$&nbsp;\n          </div>\n          <div className=\"input-container\">\n            <form onSubmit={this.handleSubmit}>\n              <input\n                ref={(elem) => (this.inputElem = elem)}\n                type=\"text\"\n                value={this.state.input}\n                onChange={this.handleChange}\n                autoFocus\n              />\n            </form>\n          </div>\n        </div>\n\n        <div\n          className=\"suggestions line\"\n          ref={(elem) => (this.suggestionsElem = elem)}\n        >\n          {suggestions}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Terminal;\n","import React from \"react\";\nimport Terminal from \"./Terminal\";\nimport \"../css/Device.scss\";\n\nfunction Device() {\n  return (\n    <div className=\"container\">\n      <div className=\"device\">\n        <div className=\"screen\">\n          <Terminal />\n        </div>\n      </div>\n      <div className=\"keyboard\">\n        <div className=\"keyboard-grip\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Device;\n","import React from \"react\";\nimport \"../css/Background.scss\";\n\nfunction Background() {\n  return (\n    <div className=\"bg\">\n      <h1 className=\"title\">Luis Arredondo</h1>\n      <div className=\"shape\" />\n    </div>\n  );\n}\n\nexport default Background;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Device from \"./components/Device\";\nimport Background from \"./components/Background\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Device />\n      <Background />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}